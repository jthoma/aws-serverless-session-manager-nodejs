import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ElastiCacheClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ElastiCacheClient";
import { DeleteCacheParameterGroupMessage } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link DeleteCacheParameterGroupCommand}.
 */
export interface DeleteCacheParameterGroupCommandInput extends DeleteCacheParameterGroupMessage {
}
/**
 * @public
 *
 * The output of {@link DeleteCacheParameterGroupCommand}.
 */
export interface DeleteCacheParameterGroupCommandOutput extends __MetadataBearer {
}
declare const DeleteCacheParameterGroupCommand_base: {
    new (input: DeleteCacheParameterGroupCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteCacheParameterGroupCommandInput, DeleteCacheParameterGroupCommandOutput, ElastiCacheClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DeleteCacheParameterGroupCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteCacheParameterGroupCommandInput, DeleteCacheParameterGroupCommandOutput, ElastiCacheClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Deletes the specified cache parameter group. You cannot delete a cache parameter group
 *             if it is associated with any cache clusters. You cannot delete the default cache
 *             parameter groups in your account.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ElastiCacheClient, DeleteCacheParameterGroupCommand } from "@aws-sdk/client-elasticache"; // ES Modules import
 * // const { ElastiCacheClient, DeleteCacheParameterGroupCommand } = require("@aws-sdk/client-elasticache"); // CommonJS import
 * const client = new ElastiCacheClient(config);
 * const input = { // DeleteCacheParameterGroupMessage
 *   CacheParameterGroupName: "STRING_VALUE", // required
 * };
 * const command = new DeleteCacheParameterGroupCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param DeleteCacheParameterGroupCommandInput - {@link DeleteCacheParameterGroupCommandInput}
 * @returns {@link DeleteCacheParameterGroupCommandOutput}
 * @see {@link DeleteCacheParameterGroupCommandInput} for command's `input` shape.
 * @see {@link DeleteCacheParameterGroupCommandOutput} for command's `response` shape.
 * @see {@link ElastiCacheClientResolvedConfig | config} for ElastiCacheClient's `config` shape.
 *
 * @throws {@link CacheParameterGroupNotFoundFault} (client fault)
 *  <p>The requested cache parameter group name does not refer to an existing cache parameter
 *             group.</p>
 *
 * @throws {@link InvalidCacheParameterGroupStateFault} (client fault)
 *  <p>The current state of the cache parameter group does not allow the requested operation
 *             to occur.</p>
 *
 * @throws {@link InvalidParameterCombinationException} (client fault)
 *  <p>Two or more incompatible parameters were specified.</p>
 *
 * @throws {@link InvalidParameterValueException} (client fault)
 *  <p>The value for a parameter is invalid.</p>
 *
 * @throws {@link ElastiCacheServiceException}
 * <p>Base exception class for all service exceptions from ElastiCache service.</p>
 *
 * @public
 * @example DeleteCacheParameterGroup
 * ```javascript
 * // Deletes the Amazon ElastiCache parameter group custom-mem1-4.
 * const input = {
 *   "CacheParameterGroupName": "custom-mem1-4"
 * };
 * const command = new DeleteCacheParameterGroupCommand(input);
 * await client.send(command);
 * // example id: deletecacheparametergroup-1475010933957
 * ```
 *
 */
export declare class DeleteCacheParameterGroupCommand extends DeleteCacheParameterGroupCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: DeleteCacheParameterGroupMessage;
            output: {};
        };
        sdk: {
            input: DeleteCacheParameterGroupCommandInput;
            output: DeleteCacheParameterGroupCommandOutput;
        };
    };
}
