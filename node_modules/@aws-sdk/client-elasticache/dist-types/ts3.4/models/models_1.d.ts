import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ElastiCacheServiceException as __BaseException } from "./ElastiCacheServiceException";
import { ReplicationGroup } from "./models_0";
export declare class ReplicationGroupAlreadyUnderMigrationFault extends __BaseException {
  readonly name: "ReplicationGroupAlreadyUnderMigrationFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ReplicationGroupAlreadyUnderMigrationFault,
      __BaseException
    >
  );
}
export interface CustomerNodeEndpoint {
  Address?: string | undefined;
  Port?: number | undefined;
}
export interface StartMigrationMessage {
  ReplicationGroupId: string | undefined;
  CustomerNodeEndpointList: CustomerNodeEndpoint[] | undefined;
}
export interface StartMigrationResponse {
  ReplicationGroup?: ReplicationGroup | undefined;
}
export declare class APICallRateForCustomerExceededFault extends __BaseException {
  readonly name: "APICallRateForCustomerExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      APICallRateForCustomerExceededFault,
      __BaseException
    >
  );
}
export declare class NodeGroupNotFoundFault extends __BaseException {
  readonly name: "NodeGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NodeGroupNotFoundFault, __BaseException>
  );
}
export interface TestFailoverMessage {
  ReplicationGroupId: string | undefined;
  NodeGroupId: string | undefined;
}
export declare class TestFailoverNotAvailableFault extends __BaseException {
  readonly name: "TestFailoverNotAvailableFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TestFailoverNotAvailableFault, __BaseException>
  );
}
export interface TestFailoverResult {
  ReplicationGroup?: ReplicationGroup | undefined;
}
export interface TestMigrationMessage {
  ReplicationGroupId: string | undefined;
  CustomerNodeEndpointList: CustomerNodeEndpoint[] | undefined;
}
export interface TestMigrationResponse {
  ReplicationGroup?: ReplicationGroup | undefined;
}
