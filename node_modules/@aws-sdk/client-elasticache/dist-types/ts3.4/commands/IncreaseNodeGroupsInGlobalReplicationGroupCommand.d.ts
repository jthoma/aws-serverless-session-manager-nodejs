import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  ElastiCacheClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ElastiCacheClient";
import {
  IncreaseNodeGroupsInGlobalReplicationGroupMessage,
  IncreaseNodeGroupsInGlobalReplicationGroupResult,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export interface IncreaseNodeGroupsInGlobalReplicationGroupCommandInput
  extends IncreaseNodeGroupsInGlobalReplicationGroupMessage {}
export interface IncreaseNodeGroupsInGlobalReplicationGroupCommandOutput
  extends IncreaseNodeGroupsInGlobalReplicationGroupResult,
    __MetadataBearer {}
declare const IncreaseNodeGroupsInGlobalReplicationGroupCommand_base: {
  new (
    input: IncreaseNodeGroupsInGlobalReplicationGroupCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    IncreaseNodeGroupsInGlobalReplicationGroupCommandInput,
    IncreaseNodeGroupsInGlobalReplicationGroupCommandOutput,
    ElastiCacheClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    __0_0: IncreaseNodeGroupsInGlobalReplicationGroupCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    IncreaseNodeGroupsInGlobalReplicationGroupCommandInput,
    IncreaseNodeGroupsInGlobalReplicationGroupCommandOutput,
    ElastiCacheClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class IncreaseNodeGroupsInGlobalReplicationGroupCommand extends IncreaseNodeGroupsInGlobalReplicationGroupCommand_base {
  protected static __types: {
    api: {
      input: IncreaseNodeGroupsInGlobalReplicationGroupMessage;
      output: IncreaseNodeGroupsInGlobalReplicationGroupResult;
    };
    sdk: {
      input: IncreaseNodeGroupsInGlobalReplicationGroupCommandInput;
      output: IncreaseNodeGroupsInGlobalReplicationGroupCommandOutput;
    };
  };
}
